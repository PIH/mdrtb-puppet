Install puppet on Ubuntu
---------------------------

$ wget https://apt.puppetlabs.com/puppetlabs-release-precise.deb
$ sudo dpkg -i puppetlabs-release-precise.deb
$ sudo apt-get update


Install Java 
http://astoryworthtelling.wordpress.com/2012/04/22/installing-sun-java-on-ubuntu-12-04-x64/
----------------------------------------
It’s a little annoying that ubuntu does not provide a sun java (I don’t think iced-tea works all that well at the moment).  I found that this guide worked pretty well.  Of course you don’t need to install in /opt/java/64.

Go here and grab the linux x64 file (not the rpm).  And save it somewhere on your machine.

Then make the directory where java will end up living, and change into it: sudo mkdir -p /opt/java/64 && cd /opt/java/64

Move the file you’ve just downloaded to this directory (you’ll need sudo-powers again): mv ~/Downloads/jre-6u31-linux-x64.bin /opt/java/64

And make the file executable: sudo chmod +x jre-6u31-linux-x64.bin

And run it (you might have to agree to the license): sudo ./jre-6u31-linux-x64.bin

Set this java to the default:
sudo update-alternatives --install "/usr/bin/java" "java" "/opt/java/64/jre1.6.0_31/bin/java" 1
sudo update-alternatives --set java /opt/java/64/jre1.6.0_31/bin/java

And setup for the browser:
mkdir -pv ~/.mozilla/plugins
sudo apt-get remove icedtea6-plugin
rm -v ~/.mozilla/plugins/libnpjp2.so
ln -s /opt/java/64/jre1.6.0_31/lib/amd64/libnpjp2.so ~/.mozilla/plugins/

Slightly modified from: http://sites.google.com/site/easylinuxtipsproject/java


Install mysql (https://dev.mysql.com/doc/refman/5.6/en/binary-installation.html)
---------------------------------------------------------------------------------
shell> groupadd mysql
shell> useradd -r -g mysql mysql
shell> cd /usr/local
shell> tar zxvf /path/to/mysql-VERSION-OS.tar.gz
shell> ln -s full-path-to-mysql-VERSION-OS mysql
shell> cd mysql
shell> chown -R mysql .
shell> chgrp -R mysql .
shell> scripts/mysql_install_db --user=mysql --no-defaults
shell> chown -R root .
shell> chown -R mysql data
shell> bin/mysqld_safe --user=mysql &
# Next command is optional
shell> cp support-files/mysql.server /etc/init.d/mysql.server


1.Start the mysql server instance or daemon with the --skip-grant-tables option. (security setting)

$ mysqld --skip-grant-tables
2.Then Execute these statements.

$ mysql -u root mysql
$mysql> UPDATE user SET Password=PASSWORD('openmrs') where USER='root';
$mysql> FLUSH PRIVILEGES;
3.Finally, restart the instance/daemon without the --skip-grant-tables option.

$ /etc/init.d/mysql restart
4.You should be able to connect with your new password.

$ mysql -u root -p
Enter password: my_password

To start mysqld at boot time you have to copy
support-files/mysql.server to the right place for your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
To do so, start the server, then issue the following commands:

  ./bin/mysqladmin -u root password 'new-password'
  ./bin/mysqladmin -u root -h dev64 password 'new-password'

Alternatively you can run:

  ./bin/mysql_secure_installation

which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.

See the manual for more instructions.

You can start the MySQL daemon with:

  cd . ; ./bin/mysqld_safe &

You can test the MySQL daemon with mysql-test-run.pl

  cd mysql-test ; perl mysql-test-run.pl

Please report any problems at http://bugs.mysql.com/

The latest information about MySQL is available on the web at

  http://www.mysql.com

Support MySQL by buying support/licenses at http://shop.mysql.com

WARNING: Found existing config file ./my.cnf on the system.
Because this file might be in use, it was not replaced,
but was used in bootstrap (unless you used --defaults-file)
and when you later start the server.
The new default config file was created as ./my-new.cnf,
please compare it with your file and take the changes you need.

WARNING: Default config file /etc/mysql/my.cnf exists on the system
This file will be read by default by the MySQL server
If you do not want to use this, either remove it, or use the
--defaults-file argument to mysqld_safe when starting the server